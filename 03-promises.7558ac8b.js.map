{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBACrCG,EAAYJ,SAASC,cAAc,UA8BzC,SAASI,GAAcC,SAAEA,EAAQC,MAAEA,EAAKC,OAAEA,IACxC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBJ,QAAiBC,OAE5CI,EAAK,sBAAoBL,QAAeC,QAEjC,IAAXC,GAAkBJ,EAAUW,gBAAgB,WAAY,GAAG,GAC1DR,EAAM,G,CAtCbH,EAAUY,iBAAiB,SAE3B,SAAuBC,GACrBA,EAAMC,iBACN,MAAMC,EAAa,CACjBb,SAAU,EACVC,MAAO,EACPC,QAAQ,GAEVL,EAAYiB,MAAQ,GAAIhB,EAAUiB,aAAa,WAAY,IAC3D,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAYiB,MAAOE,IACrCH,EAAWb,SAAWgB,EAAI,EAC1BH,EAAWZ,OAASR,EAAWqB,MAAQlB,EAAUkB,MAAQE,EACzDH,EAAWX,OAASc,KAAOnB,EAAYiB,MAAQ,EAC/Cf,EAAcc,GACXI,MAAKb,IACJb,EAAA2B,OAAOC,QAAQf,EAAS,CACtBgB,SAAS,GACT,IAEHC,OAAMhB,IACLd,EAAA2B,OAAOI,QAAQjB,EAAQ,CACrBe,SAAS,GACT,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\nconst btnSubmit = document.querySelector('button');\n\nbtnSubmit.addEventListener('click', submitPromise);\n\nfunction submitPromise(event) {\n  event.preventDefault();\n  const promiseObj = {\n    position: 0,\n    delay: 0,\n    isLast: false,\n  };\n  inputAmount.value > 0 ? btnSubmit.setAttribute('disabled', '') : '';\n  for (let i = 0; i < inputAmount.value; i++) {\n    promiseObj.position = i + 1;\n    promiseObj.delay = +inputDelay.value + inputStep.value * i;\n    promiseObj.isLast = i === +inputAmount.value - 1 ? true : false;\n    createPromise(promiseObj)\n      .then(resolve => {\n        Notify.success(resolve, {\n          useIcon: false,\n        });\n      })\n      .catch(reject => {\n        Notify.failure(reject, {\n          useIcon: false,\n        });\n      });\n  }\n}\n\nfunction createPromise({ position, delay, isLast }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n      isLast === true ? btnSubmit.removeAttribute('disabled', '') : '';\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$btnSubmit","$47d4ff9957288465$var$createPromise","position","delay","isLast","Promise","resolve","reject","setTimeout","Math","random","removeAttribute","addEventListener","event","preventDefault","promiseObj","value","setAttribute","i","then","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.7558ac8b.js.map"}